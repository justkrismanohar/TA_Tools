package com.ta.core;

import java.io.File;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

public class MarkingProcess {
	
	private String dirPath;
	private Marksheet markingSlip;
	private List<Marker> markers;
	private File item;
	
	//TO DO: PULL FROM CONFIG FILE
	private static String finalTotalPrefix = "Final Total";
	private static String sheetWithMarksName = "A1";
	private static String sheetWithMasterMarksName = "Final Marks";
	
	protected String openFilesCmd = "\"C:\\Program Files (x86)\\Notepad++\\notepad++.exe\" -nosession -multiInst ";
	protected String srcFilesToOpen = " *.java";
	
	private static Marksheet masterSheet = null;
	public static Marksheet getMasterSheet(String dirPath,String filename){
		if(masterSheet == null){
			masterSheet = new Marksheet(dirPath,filename);
			masterSheet.loadOrCreateSheet(sheetWithMasterMarksName);
		}
		return masterSheet;
	}
	
	
	public MarkingProcess(File item,String filename){
		initializeAttributes(item, filename);		
	}

	public MarkingProcess(File item, String filename, String sheetWithMarksName){
		initializeAttributes(item, filename);
		//TODO should we allow user to switch sheetWithMarksName???
		this.sheetWithMarksName = sheetWithMarksName;
		this.markingSlip.loadOrCreateSheet(sheetWithMarksName);
	}
	
	private void initializeAttributes(File item, String filename) {
		this.item = item;
		this.dirPath = item.getAbsolutePath();
		markers = new ArrayList<Marker>();
		markingSlip = new Marksheet(dirPath,filename);
	}
	
	public void addMarker(Marker m){
		if(markers!=null)
			markers.add(m);
	}
	
	public static String getSheetWithMarksName(){
		return sheetWithMarksName;
	}
	public static String getFinalTotalPrefix(){
		return finalTotalPrefix;
	}
	
	public void markAll(){
		
		
		if(markers !=null && markingSlip !=null){
			
			//System call to open all .java files in notepad++
			//note real source but ok
			//https://stackoverflow.com/questions/5028209/notepad-always-in-multi-instance/10592300
			//System call to close all tabs in notepad++ and all .java files
			//https://notepad-plus-plus.org/community/topic/13482/closing-all-tabs-prior-to-starting-editor/2
			
			//openJavaFilesInNotepad();
			
			float totalMark = 0, totalOutOf = 0;
			for(Marker m : markers){
				m.setMarksheet(markingSlip);
				m.mark();
				totalMark += m.getTotal();
				totalOutOf += m.getTotalOutOf();
			}
			
			markingSlip.writeRowBoldln("",getFinalTotalPrefix(),Float.toString(totalMark),"/"+Float.toString(totalOutOf));
			
		}
	}
	
	

//	private void openJavaFilesInNotepad() {
//		try {
//			Runtime rt = Runtime.getRuntime();
//			rt.exec("cmd.exe /c "+openFilesCmd, null, new File(item.getAbsolutePath()));
//			
//		} catch (IOException e) {
//			e.printStackTrace();
//		}
//	}
	
	public void saveMarkingSlip(){
		if(markingSlip!=null){
			markingSlip.writeExcelFile();
		}
	}
	
	protected void openJavaFilesInNotepad() {
		runCommand(openFilesCmd  +srcFilesToOpen, getMarksheet().getDirPath());
//		try {
//			Runtime rt = Runtime.getRuntime();
//			rt.exec("cmd.exe /c "+openFilesCmd  +srcFilesToOpen, null, new File(getMarksheet().getDirPath()));
//			
//		} catch (IOException e) {
//			e.printStackTrace();
//		}
	}
	
	protected void runCommand(String command,String path){
		try {
			Runtime rt = Runtime.getRuntime();
			File dir = new File(path);			
			rt.exec("cmd.exe /c " +command, null, dir);
			
		} catch (IOException e) {
			e.printStackTrace();
		}
	}

}
